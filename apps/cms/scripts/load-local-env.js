import { writeFile } from 'fs/promises'
import { config } from 'dotenv'

const loadLocalRootEnv = async () => {
  const envConfig = config({ path: ['../../.env', '../../.env.local'] })

  if (!envConfig.parsed || Object.keys(envConfig.parsed).length === 0)
    throw new Error('\n\n\nNo .env or .env.local found or it is empty\n\n\n')

  try {
    await writeFile(
      '.env',
      '# This file is generated by /apps/cms/scripts/load-local-env.ts\n' +
        '# DO NOT ATTEMPT TO EDIT THIS FILE\n' +
        Object.entries(envConfig.parsed)
          .map(([key, value]) => `${key.startsWith('PUBLIC_') ? `NEXT_${key}` : key}=${value}`)
          .join('\n'),
    )

    console.log('\n\n\nSuccessfully loaded .env and .env.local from root to local dir .env\n\n\n')
  } catch (error) {
    console.error('\n\n\nFailed to load .env and/or .env.local from root to local dir .env', error, '\n\n\n')
  }
}

loadLocalRootEnv()
